{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Desktop/expense-tracker/src/components/NewExpense/NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  _s();\n\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = { ...enteredExpenseData,\n      id: Math.random().toString()\n    }; //the function we're using to pass up the data to App.js\n\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const [isEditing, setIsEditing] = useState(false); //sets the editing state to true when the \"Add New\" button is clicked, showing the form & hiding the button we clicked\n\n  const editHandler = () => {\n    setIsEditing(true);\n  }; //sets isEditing to false, so we can pass to ExpensForm on the 'cancel' button click\n\n\n  const stopEditHandler = () => {\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: editHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 24\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onEditClick: stopEditHandler,\n      onSaveExpenseData: saveExpenseDataHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewExpense, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"names":["React","useState","ExpenseForm","NewExpense","props","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","setIsEditing","isEditing","editHandler","stopEditHandler"],"sources":["/Users/eric/Desktop/expense-tracker/src/components/NewExpense/NewExpense.js"],"sourcesContent":["import React, {useState} from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    }\n    //the function we're using to pass up the data to App.js\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  }\n\n  const [isEditing, setIsEditing] = useState(false);\n  //sets the editing state to true when the \"Add New\" button is clicked, showing the form & hiding the button we clicked\n  const editHandler = () => {\n    setIsEditing(true);\n  }\n  //sets isEditing to false, so we can pass to ExpensForm on the 'cancel' button click\n  const stopEditHandler = () => {\n    setIsEditing(false);\n  }\n  \n  return (\n    <div className=\"new-expense\">\n        {!isEditing && <button onClick={editHandler}>Add New Expense</button>}\n        {isEditing && <ExpenseForm onEditClick={stopEditHandler} onSaveExpenseData={saveExpenseDataHandler} />}\n    </div>\n  )\n}\n\nexport default NewExpense;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAC5B,MAAMC,sBAAsB,GAAIC,kBAAD,IAAwB;IACrD,MAAMC,WAAW,GAAG,EAClB,GAAGD,kBADe;MAElBE,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;IAFc,CAApB,CADqD,CAKrD;;IACAP,KAAK,CAACQ,YAAN,CAAmBL,WAAnB;IACAM,YAAY,CAAC,KAAD,CAAZ;EACD,CARD;;EAUA,MAAM,CAACC,SAAD,EAAYD,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C,CAX4B,CAY5B;;EACA,MAAMc,WAAW,GAAG,MAAM;IACxBF,YAAY,CAAC,IAAD,CAAZ;EACD,CAFD,CAb4B,CAgB5B;;;EACA,MAAMG,eAAe,GAAG,MAAM;IAC5BH,YAAY,CAAC,KAAD,CAAZ;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,aAAf;IAAA,WACK,CAACC,SAAD,iBAAc;MAAQ,OAAO,EAAEC,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADnB,EAEKD,SAAS,iBAAI,QAAC,WAAD;MAAa,WAAW,EAAEE,eAA1B;MAA2C,iBAAiB,EAAEX;IAA9D;MAAA;MAAA;MAAA;IAAA,QAFlB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CA3BD;;GAAMF,U;;KAAAA,U;AA6BN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}