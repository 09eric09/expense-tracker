{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Desktop/expense-tracker/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport ExpensesFilter from './ExpensesFilter';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  const saveDateHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.expenses.filter(expense => {\n    if (expense.date.getFullYear.toString() === filteredYear) {\n      return true;\n    }\n  });\n  console.log(filteredExpenses);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        onChangeFilter: saveDateHandler,\n        selected: filteredYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this), props.expenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","ExpensesFilter","Card","Expenses","props","filteredYear","setFilteredYear","saveDateHandler","selectedYear","filteredExpenses","expenses","filter","expense","date","getFullYear","toString","console","log","map","title","amount","id"],"sources":["/Users/eric/Desktop/expense-tracker/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, {useState} from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport ExpensesFilter from './ExpensesFilter';\nimport Card from '../UI/Card';\nimport './Expenses.css';\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  const saveDateHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  }\n\n  const filteredExpenses = props.expenses.filter((expense) => {\n    if (expense.date.getFullYear.toString() === filteredYear) {\n      return true;\n    }\n  });\n\n  console.log(filteredExpenses);\n\n  return (\n    <div>\n    <Card className=\"expenses\">\n    <ExpensesFilter onChangeFilter={saveDateHandler} selected={filteredYear} />\n    {props.expenses.map(expense => (\n      <ExpenseItem title={expense.title} amount={expense.amount} date={expense.date} key={expense.id}/>  \n    ))}  \n    </Card>\n    </div>\n  )\n}\n\nexport default Expenses;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC1B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;EAEA,MAAMQ,eAAe,GAAIC,YAAD,IAAkB;IACxCF,eAAe,CAACE,YAAD,CAAf;EACD,CAFD;;EAIA,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAuBC,OAAD,IAAa;IAC1D,IAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,CAAyBC,QAAzB,OAAwCV,YAA5C,EAA0D;MACxD,OAAO,IAAP;IACD;EACF,CAJwB,CAAzB;EAMAW,OAAO,CAACC,GAAR,CAAYR,gBAAZ;EAEA,oBACE;IAAA,uBACA,QAAC,IAAD;MAAM,SAAS,EAAC,UAAhB;MAAA,wBACA,QAAC,cAAD;QAAgB,cAAc,EAAEF,eAAhC;QAAiD,QAAQ,EAAEF;MAA3D;QAAA;QAAA;QAAA;MAAA,QADA,EAECD,KAAK,CAACM,QAAN,CAAeQ,GAAf,CAAmBN,OAAO,iBACzB,QAAC,WAAD;QAAa,KAAK,EAAEA,OAAO,CAACO,KAA5B;QAAmC,MAAM,EAAEP,OAAO,CAACQ,MAAnD;QAA2D,IAAI,EAAER,OAAO,CAACC;MAAzE,GAAoFD,OAAO,CAACS,EAA5F;QAAA;QAAA;QAAA;MAAA,QADD,CAFD;IAAA;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAzBD;;GAAMlB,Q;;KAAAA,Q;AA2BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}