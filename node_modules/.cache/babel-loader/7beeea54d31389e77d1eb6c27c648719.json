{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Desktop/expense-tracker/src/components/NewExpense/NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  _s();\n\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = { ...enteredExpenseData,\n      id: Math.random().toString()\n    }; //the function we're using to pass up the data to App.js\n\n    props.onAddExpense(expenseData);\n  };\n\n  const [isEditing, setIsEditing] = useState(false); //sets the editing state to true when the \"Add New\" button is clicked, showing the form & hiding the button\n\n  const editHandler = () => {\n    setIsEditing(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: editHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 24\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewExpense, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"names":["React","useState","ExpenseForm","NewExpense","props","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","isEditing","setIsEditing","editHandler"],"sources":["/Users/eric/Desktop/expense-tracker/src/components/NewExpense/NewExpense.js"],"sourcesContent":["import React, {useState} from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    }\n    //the function we're using to pass up the data to App.js\n    props.onAddExpense(expenseData);\n  }\n\n  const [isEditing, setIsEditing] = useState(false);\n  //sets the editing state to true when the \"Add New\" button is clicked, showing the form & hiding the button\n  const editHandler = () => {\n    setIsEditing(true);\n  }\n  \n  return (\n    <div className=\"new-expense\">\n        {!isEditing && <button onClick={editHandler}>Add New Expense</button>}\n        {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />}\n    </div>\n  )\n}\n\nexport default NewExpense;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAC5B,MAAMC,sBAAsB,GAAIC,kBAAD,IAAwB;IACrD,MAAMC,WAAW,GAAG,EAClB,GAAGD,kBADe;MAElBE,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;IAFc,CAApB,CADqD,CAKrD;;IACAP,KAAK,CAACQ,YAAN,CAAmBL,WAAnB;EACD,CAPD;;EASA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C,CAV4B,CAW5B;;EACA,MAAMc,WAAW,GAAG,MAAM;IACxBD,YAAY,CAAC,IAAD,CAAZ;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,aAAf;IAAA,WACK,CAACD,SAAD,iBAAc;MAAQ,OAAO,EAAEE,WAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADnB,EAEKF,SAAS,iBAAI,QAAC,WAAD;MAAa,iBAAiB,EAAER;IAAhC;MAAA;MAAA;MAAA;IAAA,QAFlB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAtBD;;GAAMF,U;;KAAAA,U;AAwBN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}